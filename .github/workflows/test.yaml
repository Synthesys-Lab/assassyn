
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: Test

env:
  VERILATOR_VERSION: v5.026

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with: 
          ref: ${{ github.head_ref }}
      - name: Cache verilator build
        id: cache-verilator-build
        uses: actions/cache@v2
        env:
          cache-name: cache-verilator-build
        with:
          path: verilator
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.VERILATOR_VERSION }}
      - if: ${{ steps.cache-verilator-build.outputs.cache-hit != 'true' }}
        name: Build verilator
        run: |
          sudo apt-get install -y git help2man perl python3 make autoconf g++ flex bison ccache \
            libunwind-dev libgoogle-perftools-dev numactl perl-doc libfl2 libfl-dev zlib1g zlib1g-dev;
          git clone https://github.com/verilator/verilator && cd verilator && git checkout $VERILATOR_VERSION;
          autoconf && ./configure && make -j `nproc`;
      - name: Install python dependencies
        run: |
          pip install -r python/requirements.txt;
      - name: Install verilator
        run: |
          cd verilator && sudo make install;
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/bin/sccache
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Install sccache
        run: |
          if ! command -v sccache &> /dev/null
          then
            cargo install sccache
          fi;
      - name: Python Frontend Unit Tests
        env:
          PYTHONPATH: ${{ github.workspace }}/python
          ASSASSYN_HOME: ${{ github.workspace }}
          RUSTC_WRAPPER: sccache
          VERILATOR_ROOT: /usr/local/share/verilator
        run: |
          pytest python/unit-tests;
